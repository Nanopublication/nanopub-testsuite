@prefix this: <http://purl.org/np/RAcQHJ_Nxq6cUQkzg8J-xOiBeRee5aLQXf_fAebFwQDks> .
@prefix sub: <http://purl.org/np/RAcQHJ_Nxq6cUQkzg8J-xOiBeRee5aLQXf_fAebFwQDks#> .
@prefix bpmn: <http://dkm.fbk.eu/index.php/BPMN2_Ontology#> .
@prefix np: <http://www.nanopub.org/nschema#> .
@prefix npx: <http://purl.org/nanopub/x/> .
@prefix ns1: <http://purl.org/dc/terms/> .
@prefix pplan: <http://purl.org/net/p-plan#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

sub:Head {
  this: np:hasAssertion sub:assertion;
    np:hasProvenance sub:provenance;
    np:hasPublicationInfo sub:pubInfo;
    a np:Nanopublication .
}

sub:assertion {
  sub:a a "int", pplan:Variable .
  
  sub:add_output1 a "int", pplan:Variable .
  
  sub:b a "int", pplan:Variable .
  
  sub:step ns1:description """@mark_as_fairstep(label='add integers', is_script_task=True)
def add(a: int, b: int) -> int:
    \"\"\"
    Computational step adding two ints together.
    \"\"\"
    return a + b
""";
    pplan:hasInputVar sub:a, sub:b;
    pplan:hasOutputVar sub:add_output1;
    a bpmn:ScriptTask, pplan:Step;
    rdfs:label "add integers" .
}

sub:provenance {
  sub:assertion prov:generatedAtTime "2020-12-29T16:54:20.582254"^^xsd:dateTime .
}

sub:pubInfo {
  sub:sig npx:hasAlgorithm "RSA";
    npx:hasPublicKey "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHcBtjfkmhqvHAg/vG73ky2txQkMk+QSrN6i+DvOGEXhv0g4hf89gqfg0gYIn8pHykxnrEyk6pC+3rcYVxqjsQ6l7XN/b2Q7FKKOJxt/qpLmrIe4/XNxVBeceTIdxrRy9r4dVBI4o5BzKFiNSM6PPToWtOoHR7obxL8gfRPfcXWQIDAQAB";
    npx:hasSignature "mpQaGvS/Z0bBgyEaaTEzP9xbSMUF5bDgMLmahBSM9WYX7tWFmv5cmowobNQYL4gTMLn6fc3eNZeqIY95yGWFcBJpqrnZsl/HCUuEmxYI/tqruDYa5gJXv3tJQuOJsNFDe/Bss2dkSU+/htsKpqbVL5pWrlH9U+7diHi9ou17kCU=";
    npx:hasSignatureTarget this: .
  
  this: npx:introduces sub:step;
    prov:generatedAtTime "2020-12-29T16:54:20.582254"^^xsd:dateTime;
    prov:wasAttributedTo <https://orcid.org/0000-0000-0000-0000> .
}
